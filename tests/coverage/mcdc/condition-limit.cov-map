Function name: condition_limit::accept_7_conditions
Raw bytes (195): 0x[01, 01, 20, 01, 05, 05, 09, 09, 0d, 0d, 11, 11, 15, 15, 19, 19, 1d, 57, 02, 5b, 7e, 5f, 7a, 63, 76, 67, 72, 6a, 6e, 19, 1d, 15, 19, 11, 15, 0d, 11, 09, 0d, 05, 09, 1d, 53, 57, 02, 5b, 7e, 5f, 7a, 63, 76, 67, 72, 6a, 6e, 19, 1d, 15, 19, 11, 15, 0d, 11, 09, 0d, 05, 09, 12, 01, 07, 01, 02, 09, 28, 08, 07, 02, 08, 00, 27, 30, 05, 02, 01, 07, 00, 00, 08, 00, 09, 05, 00, 0d, 00, 0e, 30, 09, 7e, 07, 06, 00, 00, 0d, 00, 0e, 09, 00, 12, 00, 13, 30, 0d, 7a, 06, 05, 00, 00, 12, 00, 13, 0d, 00, 17, 00, 18, 30, 11, 76, 05, 04, 00, 00, 17, 00, 18, 11, 00, 1c, 00, 1d, 30, 15, 72, 04, 03, 00, 00, 1c, 00, 1d, 15, 00, 21, 00, 22, 30, 19, 6e, 03, 02, 00, 00, 21, 00, 22, 19, 00, 26, 00, 27, 30, 1d, 6a, 02, 00, 00, 00, 26, 00, 27, 1d, 00, 28, 02, 06, 53, 02, 06, 00, 07, 4f, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 32
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(2), rhs = Counter(3)
- expression 3 operands: lhs = Counter(3), rhs = Counter(4)
- expression 4 operands: lhs = Counter(4), rhs = Counter(5)
- expression 5 operands: lhs = Counter(5), rhs = Counter(6)
- expression 6 operands: lhs = Counter(6), rhs = Counter(7)
- expression 7 operands: lhs = Expression(21, Add), rhs = Expression(0, Sub)
- expression 8 operands: lhs = Expression(22, Add), rhs = Expression(31, Sub)
- expression 9 operands: lhs = Expression(23, Add), rhs = Expression(30, Sub)
- expression 10 operands: lhs = Expression(24, Add), rhs = Expression(29, Sub)
- expression 11 operands: lhs = Expression(25, Add), rhs = Expression(28, Sub)
- expression 12 operands: lhs = Expression(26, Sub), rhs = Expression(27, Sub)
- expression 13 operands: lhs = Counter(6), rhs = Counter(7)
- expression 14 operands: lhs = Counter(5), rhs = Counter(6)
- expression 15 operands: lhs = Counter(4), rhs = Counter(5)
- expression 16 operands: lhs = Counter(3), rhs = Counter(4)
- expression 17 operands: lhs = Counter(2), rhs = Counter(3)
- expression 18 operands: lhs = Counter(1), rhs = Counter(2)
- expression 19 operands: lhs = Counter(7), rhs = Expression(20, Add)
- expression 20 operands: lhs = Expression(21, Add), rhs = Expression(0, Sub)
- expression 21 operands: lhs = Expression(22, Add), rhs = Expression(31, Sub)
- expression 22 operands: lhs = Expression(23, Add), rhs = Expression(30, Sub)
- expression 23 operands: lhs = Expression(24, Add), rhs = Expression(29, Sub)
- expression 24 operands: lhs = Expression(25, Add), rhs = Expression(28, Sub)
- expression 25 operands: lhs = Expression(26, Sub), rhs = Expression(27, Sub)
- expression 26 operands: lhs = Counter(6), rhs = Counter(7)
- expression 27 operands: lhs = Counter(5), rhs = Counter(6)
- expression 28 operands: lhs = Counter(4), rhs = Counter(5)
- expression 29 operands: lhs = Counter(3), rhs = Counter(4)
- expression 30 operands: lhs = Counter(2), rhs = Counter(3)
- expression 31 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 18
- Code(Counter(0)) at (prev + 7, 1) to (start + 2, 9)
- MCDCDecision { bitmap_idx: 8, conditions_num: 7 } at (prev + 2, 8) to (start + 0, 39)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 7, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 13) to (start + 0, 14)
- MCDCBranch { true: Counter(2), false: Expression(31, Sub), condition_id: 7, true_next_id: 6, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 14)
    true  = c2
    false = (c1 - c2)
- Code(Counter(2)) at (prev + 0, 18) to (start + 0, 19)
- MCDCBranch { true: Counter(3), false: Expression(30, Sub), condition_id: 6, true_next_id: 5, false_next_id: 0 } at (prev + 0, 18) to (start + 0, 19)
    true  = c3
    false = (c2 - c3)
- Code(Counter(3)) at (prev + 0, 23) to (start + 0, 24)
- MCDCBranch { true: Counter(4), false: Expression(29, Sub), condition_id: 5, true_next_id: 4, false_next_id: 0 } at (prev + 0, 23) to (start + 0, 24)
    true  = c4
    false = (c3 - c4)
- Code(Counter(4)) at (prev + 0, 28) to (start + 0, 29)
- MCDCBranch { true: Counter(5), false: Expression(28, Sub), condition_id: 4, true_next_id: 3, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 29)
    true  = c5
    false = (c4 - c5)
- Code(Counter(5)) at (prev + 0, 33) to (start + 0, 34)
- MCDCBranch { true: Counter(6), false: Expression(27, Sub), condition_id: 3, true_next_id: 2, false_next_id: 0 } at (prev + 0, 33) to (start + 0, 34)
    true  = c6
    false = (c5 - c6)
- Code(Counter(6)) at (prev + 0, 38) to (start + 0, 39)
- MCDCBranch { true: Counter(7), false: Expression(26, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 38) to (start + 0, 39)
    true  = c7
    false = (c6 - c7)
- Code(Counter(7)) at (prev + 0, 40) to (start + 2, 6)
- Code(Expression(20, Add)) at (prev + 2, 6) to (start + 0, 7)
    = (((((((c6 - c7) + (c5 - c6)) + (c4 - c5)) + (c3 - c4)) + (c2 - c3)) + (c1 - c2)) + (c0 - c1))
- Code(Expression(19, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (c7 + (((((((c6 - c7) + (c5 - c6)) + (c4 - c5)) + (c3 - c4)) + (c2 - c3)) + (c1 - c2)) + (c0 - c1)))
Max counter seen: c7

