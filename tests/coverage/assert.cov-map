Function name: assert::main
Raw bytes (63): 0x[01, 01, 07, 01, 13, 05, 17, 09, 0d, 11, 05, 05, 17, 09, 0d, 03, 11, 09, 01, 09, 01, 01, 1b, 03, 02, 0b, 00, 18, 11, 01, 0c, 00, 1a, 05, 00, 1b, 02, 0a, 0e, 02, 13, 00, 20, 09, 00, 21, 02, 0a, 0d, 02, 0a, 00, 0b, 13, 01, 09, 00, 17, 1a, 02, 05, 01, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 7
- expression 0 operands: lhs = Counter(0), rhs = Expression(4, Add)
- expression 1 operands: lhs = Counter(1), rhs = Expression(5, Add)
- expression 2 operands: lhs = Counter(2), rhs = Counter(3)
- expression 3 operands: lhs = Counter(4), rhs = Counter(1)
- expression 4 operands: lhs = Counter(1), rhs = Expression(5, Add)
- expression 5 operands: lhs = Counter(2), rhs = Counter(3)
- expression 6 operands: lhs = Expression(0, Add), rhs = Counter(4)
Number of file 0 mappings: 9
- Code(Counter(0)) at (prev + 9, 1) to (start + 1, 27)
- Code(Expression(0, Add)) at (prev + 2, 11) to (start + 0, 24)
    = (c0 + (c1 + (c2 + c3)))
- Code(Counter(4)) at (prev + 1, 12) to (start + 0, 26)
- Code(Counter(1)) at (prev + 0, 27) to (start + 2, 10)
- Code(Expression(3, Sub)) at (prev + 2, 19) to (start + 0, 32)
    = (c4 - c1)
- Code(Counter(2)) at (prev + 0, 33) to (start + 2, 10)
- Code(Counter(3)) at (prev + 2, 10) to (start + 0, 11)
- Code(Expression(4, Add)) at (prev + 1, 9) to (start + 0, 23)
    = (c1 + (c2 + c3))
- Code(Expression(6, Sub)) at (prev + 2, 5) to (start + 1, 2)
    = ((c0 + (c1 + (c2 + c3))) - c4)
Max counter seen: c4

Function name: assert::might_fail_assert
Raw bytes (21): 0x[01, 01, 01, 01, 05, 03, 01, 04, 01, 02, 0f, 02, 02, 25, 00, 3d, 05, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 1
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
Number of file 0 mappings: 3
- Code(Counter(0)) at (prev + 4, 1) to (start + 2, 15)
- Code(Expression(0, Sub)) at (prev + 2, 37) to (start + 0, 61)
    = (c0 - c1)
- Code(Counter(1)) at (prev + 1, 1) to (start + 0, 2)
Max counter seen: c1

