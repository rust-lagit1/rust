Function name: match_misc::empty_matching_decision
Raw bytes (125): 0x[01, 01, 06, 01, 05, 05, 09, 15, 19, 19, 0d, 17, 11, 09, 0d, 11, 01, 22, 01, 01, 0e, 09, 02, 09, 00, 0a, 28, 06, 02, 00, 09, 00, 1d, 01, 00, 0e, 00, 13, 30, 05, 02, 01, 02, 00, 00, 0e, 00, 13, 05, 00, 17, 00, 1d, 30, 09, 06, 02, 00, 00, 00, 17, 00, 1d, 09, 00, 21, 00, 32, 0d, 01, 09, 00, 0a, 28, 03, 02, 00, 09, 00, 1c, 15, 00, 0e, 00, 13, 30, 19, 0a, 01, 02, 00, 00, 0e, 00, 13, 19, 00, 17, 00, 1c, 30, 0d, 0e, 02, 00, 00, 00, 17, 00, 1c, 0d, 00, 20, 00, 30, 11, 01, 0e, 00, 1a, 13, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(5), rhs = Counter(6)
- expression 3 operands: lhs = Counter(6), rhs = Counter(3)
- expression 4 operands: lhs = Expression(5, Add), rhs = Counter(4)
- expression 5 operands: lhs = Counter(2), rhs = Counter(3)
Number of file 0 mappings: 17
- Code(Counter(0)) at (prev + 34, 1) to (start + 1, 14)
- Code(Counter(2)) at (prev + 2, 9) to (start + 0, 10)
- MCDCDecision { bitmap_idx: 6, conditions_num: 2 } at (prev + 0, 9) to (start + 0, 29)
- Code(Counter(0)) at (prev + 0, 14) to (start + 0, 19)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 14) to (start + 0, 19)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 23) to (start + 0, 29)
- MCDCBranch { true: Counter(2), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 23) to (start + 0, 29)
    true  = c2
    false = (c1 - c2)
- Code(Counter(2)) at (prev + 0, 33) to (start + 0, 50)
- Code(Counter(3)) at (prev + 1, 9) to (start + 0, 10)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 0, 9) to (start + 0, 28)
- Code(Counter(5)) at (prev + 0, 14) to (start + 0, 19)
- MCDCBranch { true: Counter(6), false: Expression(2, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 14) to (start + 0, 19)
    true  = c6
    false = (c5 - c6)
- Code(Counter(6)) at (prev + 0, 23) to (start + 0, 28)
- MCDCBranch { true: Counter(3), false: Expression(3, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 23) to (start + 0, 28)
    true  = c3
    false = (c6 - c3)
- Code(Counter(3)) at (prev + 0, 32) to (start + 0, 48)
- Code(Counter(4)) at (prev + 1, 14) to (start + 0, 26)
- Code(Expression(4, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c2 + c3) + c4)

Function name: match_misc::empty_subcandidate
Raw bytes (83): 0x[01, 01, 0b, 01, 0b, 05, 00, 05, 00, 11, 0d, 11, 15, 27, 0d, 00, 05, 23, 2b, 27, 0d, 00, 05, 11, 15, 08, 01, 78, 01, 01, 0e, 28, 04, 03, 02, 09, 00, 1e, 30, 02, 0b, 01, 02, 00, 00, 09, 00, 12, 30, 15, 0f, 02, 00, 03, 00, 10, 00, 11, 30, 11, 0d, 03, 00, 00, 00, 1c, 00, 1d, 2b, 00, 22, 00, 2e, 23, 04, 26, 00, 32, 1f, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 11
- expression 0 operands: lhs = Counter(0), rhs = Expression(2, Add)
- expression 1 operands: lhs = Counter(1), rhs = Zero
- expression 2 operands: lhs = Counter(1), rhs = Zero
- expression 3 operands: lhs = Counter(4), rhs = Counter(3)
- expression 4 operands: lhs = Counter(4), rhs = Counter(5)
- expression 5 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 6 operands: lhs = Zero, rhs = Counter(1)
- expression 7 operands: lhs = Expression(8, Add), rhs = Expression(10, Add)
- expression 8 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 9 operands: lhs = Zero, rhs = Counter(1)
- expression 10 operands: lhs = Counter(4), rhs = Counter(5)
Number of file 0 mappings: 8
- Code(Counter(0)) at (prev + 120, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 4, conditions_num: 3 } at (prev + 2, 9) to (start + 0, 30)
- MCDCBranch { true: Expression(0, Sub), false: Expression(2, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 18)
    true  = (c0 - (c1 + Zero))
    false = (c1 + Zero)
- MCDCBranch { true: Counter(5), false: Expression(3, Add), condition_id: 2, true_next_id: 0, false_next_id: 3 } at (prev + 0, 16) to (start + 0, 17)
    true  = c5
    false = (c4 + c3)
- MCDCBranch { true: Counter(4), false: Counter(3), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 29)
    true  = c4
    false = c3
- Code(Expression(10, Add)) at (prev + 0, 34) to (start + 0, 46)
    = (c4 + c5)
- Code(Expression(8, Add)) at (prev + 4, 38) to (start + 0, 50)
    = ((Zero + c1) + c3)
- Code(Expression(7, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((Zero + c1) + c3) + (c4 + c5))

Function name: match_misc::implicit_folded_condition
Raw bytes (90): 0x[01, 01, 09, 01, 05, 02, 09, 11, 1e, 02, 09, 0d, 09, 1b, 23, 11, 1e, 02, 09, 0d, 09, 09, 01, 82, 01, 01, 01, 0e, 28, 05, 04, 03, 09, 00, 26, 30, 02, 05, 01, 02, 03, 00, 0a, 00, 0f, 30, 1e, 09, 02, 00, 00, 00, 11, 00, 16, 30, 05, 00, 03, 04, 00, 00, 1b, 00, 1f, 30, 11, 0d, 04, 00, 00, 00, 21, 00, 25, 1b, 00, 2a, 00, 35, 23, 01, 0e, 00, 1d, 17, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 9
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 2 operands: lhs = Counter(4), rhs = Expression(7, Sub)
- expression 3 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 4 operands: lhs = Counter(3), rhs = Counter(2)
- expression 5 operands: lhs = Expression(6, Add), rhs = Expression(8, Add)
- expression 6 operands: lhs = Counter(4), rhs = Expression(7, Sub)
- expression 7 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 8 operands: lhs = Counter(3), rhs = Counter(2)
Number of file 0 mappings: 9
- Code(Counter(0)) at (prev + 130, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 5, conditions_num: 4 } at (prev + 3, 9) to (start + 0, 38)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 3 } at (prev + 0, 10) to (start + 0, 15)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Expression(7, Sub), false: Counter(2), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 22)
    true  = ((c0 - c1) - c2)
    false = c2
- MCDCBranch { true: Counter(1), false: Zero, condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 27) to (start + 0, 31)
    true  = c1
    false = Zero
- MCDCBranch { true: Counter(4), false: Counter(3), condition_id: 4, true_next_id: 0, false_next_id: 0 } at (prev + 0, 33) to (start + 0, 37)
    true  = c4
    false = c3
- Code(Expression(6, Add)) at (prev + 0, 42) to (start + 0, 53)
    = (c4 + ((c0 - c1) - c2))
- Code(Expression(8, Add)) at (prev + 1, 14) to (start + 0, 29)
    = (c3 + c2)
- Code(Expression(5, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c4 + ((c0 - c1) - c2)) + (c3 + c2))

Function name: match_misc::loop_over_iterator
Raw bytes (31): 0x[01, 01, 01, 01, 05, 05, 01, 09, 01, 00, 19, 05, 01, 09, 00, 0c, 03, 00, 10, 00, 19, 05, 00, 1a, 02, 06, 01, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 1
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
Number of file 0 mappings: 5
- Code(Counter(0)) at (prev + 9, 1) to (start + 0, 25)
- Code(Counter(1)) at (prev + 1, 9) to (start + 0, 12)
- Code(Expression(0, Add)) at (prev + 0, 16) to (start + 0, 25)
    = (c0 + c1)
- Code(Counter(1)) at (prev + 0, 26) to (start + 2, 6)
- Code(Counter(0)) at (prev + 3, 1) to (start + 0, 2)

Function name: match_misc::match_failure_test_kind
Raw bytes (97): 0x[01, 01, 07, 01, 05, 0d, 00, 11, 00, 05, 00, 17, 11, 1b, 0d, 05, 00, 0b, 01, 51, 01, 01, 14, 28, 06, 02, 02, 09, 00, 16, 30, 02, 05, 01, 02, 00, 00, 0a, 00, 0f, 30, 11, 07, 02, 00, 00, 00, 11, 00, 15, 11, 00, 1a, 00, 25, 28, 03, 02, 01, 09, 00, 19, 30, 02, 05, 01, 02, 00, 00, 0a, 00, 0f, 30, 0d, 0b, 02, 00, 00, 00, 11, 00, 18, 0d, 00, 1d, 00, 28, 1b, 01, 0e, 00, 1a, 13, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 7
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(3), rhs = Zero
- expression 2 operands: lhs = Counter(4), rhs = Zero
- expression 3 operands: lhs = Counter(1), rhs = Zero
- expression 4 operands: lhs = Expression(5, Add), rhs = Counter(4)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(3)
- expression 6 operands: lhs = Counter(1), rhs = Zero
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 81, 1) to (start + 1, 20)
- MCDCDecision { bitmap_idx: 6, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 22)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 15)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(4), false: Expression(1, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 21)
    true  = c4
    false = (c3 + Zero)
- Code(Counter(4)) at (prev + 0, 26) to (start + 0, 37)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 25)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 15)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(3), false: Expression(2, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = c3
    false = (c4 + Zero)
- Code(Counter(3)) at (prev + 0, 29) to (start + 0, 40)
- Code(Expression(6, Add)) at (prev + 1, 14) to (start + 0, 26)
    = (c1 + Zero)
- Code(Expression(4, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c1 + Zero) + c3) + c4)

Function name: match_misc::match_with_macros
Raw bytes (36): 0x[01, 01, 06, 07, 0e, 0b, 05, 11, 09, 01, 13, 17, 0d, 05, 09, 04, 01, 11, 01, 00, 20, 11, 0d, 05, 00, 18, 01, 00, 19, 00, 1c, 03, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Expression(1, Add), rhs = Expression(3, Sub)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(1)
- expression 2 operands: lhs = Counter(4), rhs = Counter(2)
- expression 3 operands: lhs = Counter(0), rhs = Expression(4, Add)
- expression 4 operands: lhs = Expression(5, Add), rhs = Counter(3)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 4
- Code(Counter(0)) at (prev + 17, 1) to (start + 0, 32)
- Code(Counter(4)) at (prev + 13, 5) to (start + 0, 24)
- Code(Counter(0)) at (prev + 0, 25) to (start + 0, 28)
- Code(Expression(0, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (((c4 + c2) + c1) + (c0 - ((c1 + c2) + c3)))

Function name: match_misc::multi_matched_candidates
Raw bytes (129): 0x[01, 01, 08, 01, 05, 02, 11, 1f, 0d, 05, 09, 17, 15, 1b, 11, 1f, 0d, 05, 09, 10, 01, 70, 01, 00, 2f, 19, 01, 0b, 00, 0e, 28, 07, 02, 01, 09, 00, 1c, 30, 02, 05, 01, 02, 00, 00, 09, 00, 12, 11, 00, 10, 00, 11, 02, 00, 16, 00, 17, 30, 11, 06, 02, 00, 00, 00, 16, 00, 1c, 11, 00, 1b, 00, 2c, 28, 04, 03, 01, 09, 00, 1b, 30, 02, 05, 01, 02, 00, 00, 09, 00, 12, 30, 19, 09, 02, 03, 00, 00, 10, 00, 11, 19, 00, 16, 00, 17, 30, 15, 0d, 03, 00, 00, 00, 16, 00, 1b, 15, 00, 1a, 00, 2c, 1b, 01, 0e, 00, 1a, 13, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 8
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(0, Sub), rhs = Counter(4)
- expression 2 operands: lhs = Expression(7, Add), rhs = Counter(3)
- expression 3 operands: lhs = Counter(1), rhs = Counter(2)
- expression 4 operands: lhs = Expression(5, Add), rhs = Counter(5)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(4)
- expression 6 operands: lhs = Expression(7, Add), rhs = Counter(3)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 16
- Code(Counter(0)) at (prev + 112, 1) to (start + 0, 47)
- Code(Counter(6)) at (prev + 1, 11) to (start + 0, 14)
- MCDCDecision { bitmap_idx: 7, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 28)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 18)
    true  = (c0 - c1)
    false = c1
- Code(Counter(4)) at (prev + 0, 16) to (start + 0, 17)
- Code(Expression(0, Sub)) at (prev + 0, 22) to (start + 0, 23)
    = (c0 - c1)
- MCDCBranch { true: Counter(4), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 22) to (start + 0, 28)
    true  = c4
    false = ((c0 - c1) - c4)
- Code(Counter(4)) at (prev + 0, 27) to (start + 0, 44)
- MCDCDecision { bitmap_idx: 4, conditions_num: 3 } at (prev + 1, 9) to (start + 0, 27)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 18)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(6), false: Counter(2), condition_id: 2, true_next_id: 3, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 17)
    true  = c6
    false = c2
- Code(Counter(6)) at (prev + 0, 22) to (start + 0, 23)
- MCDCBranch { true: Counter(5), false: Counter(3), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 22) to (start + 0, 27)
    true  = c5
    false = c3
- Code(Counter(5)) at (prev + 0, 26) to (start + 0, 44)
- Code(Expression(6, Add)) at (prev + 1, 14) to (start + 0, 26)
    = ((c1 + c2) + c3)
- Code(Expression(4, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((((c1 + c2) + c3) + c4) + c5)

Function name: match_misc::nested_matching
Raw bytes (85): 0x[01, 01, 06, 01, 05, 05, 11, 05, 11, 09, 02, 0d, 17, 09, 02, 0b, 01, 66, 01, 01, 09, 28, 03, 02, 01, 08, 03, 06, 30, 05, 02, 01, 02, 00, 00, 08, 00, 09, 30, 0d, 09, 02, 00, 00, 00, 0d, 03, 06, 05, 00, 13, 00, 16, 20, 0a, 11, 01, 09, 00, 12, 0a, 00, 10, 00, 1c, 15, 01, 0e, 00, 13, 0d, 01, 07, 02, 06, 17, 02, 06, 00, 07, 13, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(4)
- expression 2 operands: lhs = Counter(1), rhs = Counter(4)
- expression 3 operands: lhs = Counter(2), rhs = Expression(0, Sub)
- expression 4 operands: lhs = Counter(3), rhs = Expression(5, Add)
- expression 5 operands: lhs = Counter(2), rhs = Expression(0, Sub)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 102, 1) to (start + 1, 9)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 8) to (start + 3, 6)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- MCDCBranch { true: Counter(3), false: Counter(2), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 13) to (start + 3, 6)
    true  = c3
    false = c2
- Code(Counter(1)) at (prev + 0, 19) to (start + 0, 22)
- Branch { true: Expression(2, Sub), false: Counter(4) } at (prev + 1, 9) to (start + 0, 18)
    true  = (c1 - c4)
    false = c4
- Code(Expression(2, Sub)) at (prev + 0, 16) to (start + 0, 28)
    = (c1 - c4)
- Code(Counter(5)) at (prev + 1, 14) to (start + 0, 19)
- Code(Counter(3)) at (prev + 1, 7) to (start + 2, 6)
- Code(Expression(5, Add)) at (prev + 2, 6) to (start + 0, 7)
    = (c2 + (c0 - c1))
- Code(Expression(4, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (c3 + (c2 + (c0 - c1)))

Function name: match_misc::overlapping_decisions
Raw bytes (150): 0x[01, 01, 15, 01, 07, 05, 00, 02, 00, 15, 22, 05, 27, 15, 19, 02, 00, 19, 22, 05, 27, 15, 19, 4e, 00, 02, 53, 0d, 00, 15, 0d, 02, 53, 0d, 00, 47, 4e, 19, 4b, 15, 0d, 02, 53, 0d, 00, 0e, 01, 34, 01, 00, 3b, 02, 01, 0b, 00, 0e, 28, 08, 02, 01, 09, 00, 1b, 30, 05, 1b, 01, 02, 00, 00, 0a, 00, 11, 30, 19, 0f, 02, 00, 00, 00, 13, 00, 1a, 19, 00, 1f, 00, 2f, 28, 05, 04, 01, 09, 00, 2a, 30, 05, 1b, 01, 02, 03, 00, 0a, 00, 11, 30, 15, 1f, 02, 00, 00, 00, 13, 00, 17, 30, 02, 00, 03, 04, 00, 00, 1c, 00, 20, 30, 0d, 2b, 04, 00, 00, 00, 22, 00, 29, 4b, 00, 2e, 00, 4a, 4e, 01, 19, 00, 24, 43, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 21
- expression 0 operands: lhs = Counter(0), rhs = Expression(1, Add)
- expression 1 operands: lhs = Counter(1), rhs = Zero
- expression 2 operands: lhs = Expression(0, Sub), rhs = Zero
- expression 3 operands: lhs = Counter(5), rhs = Expression(8, Sub)
- expression 4 operands: lhs = Counter(1), rhs = Expression(9, Add)
- expression 5 operands: lhs = Counter(5), rhs = Counter(6)
- expression 6 operands: lhs = Expression(0, Sub), rhs = Zero
- expression 7 operands: lhs = Counter(6), rhs = Expression(8, Sub)
- expression 8 operands: lhs = Counter(1), rhs = Expression(9, Add)
- expression 9 operands: lhs = Counter(5), rhs = Counter(6)
- expression 10 operands: lhs = Expression(19, Sub), rhs = Zero
- expression 11 operands: lhs = Expression(0, Sub), rhs = Expression(20, Add)
- expression 12 operands: lhs = Counter(3), rhs = Zero
- expression 13 operands: lhs = Counter(5), rhs = Counter(3)
- expression 14 operands: lhs = Expression(0, Sub), rhs = Expression(20, Add)
- expression 15 operands: lhs = Counter(3), rhs = Zero
- expression 16 operands: lhs = Expression(17, Add), rhs = Expression(19, Sub)
- expression 17 operands: lhs = Counter(6), rhs = Expression(18, Add)
- expression 18 operands: lhs = Counter(5), rhs = Counter(3)
- expression 19 operands: lhs = Expression(0, Sub), rhs = Expression(20, Add)
- expression 20 operands: lhs = Counter(3), rhs = Zero
Number of file 0 mappings: 14
- Code(Counter(0)) at (prev + 52, 1) to (start + 0, 59)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = (c0 - (c1 + Zero))
- MCDCDecision { bitmap_idx: 8, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 27)
- MCDCBranch { true: Counter(1), false: Expression(6, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 17)
    true  = c1
    false = ((c0 - (c1 + Zero)) + Zero)
- MCDCBranch { true: Counter(6), false: Expression(3, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 19) to (start + 0, 26)
    true  = c6
    false = (c5 + (c1 - (c5 + c6)))
- Code(Counter(6)) at (prev + 0, 31) to (start + 0, 47)
- MCDCDecision { bitmap_idx: 5, conditions_num: 4 } at (prev + 1, 9) to (start + 0, 42)
- MCDCBranch { true: Counter(1), false: Expression(6, Add), condition_id: 1, true_next_id: 2, false_next_id: 3 } at (prev + 0, 10) to (start + 0, 17)
    true  = c1
    false = ((c0 - (c1 + Zero)) + Zero)
- MCDCBranch { true: Counter(5), false: Expression(7, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 19) to (start + 0, 23)
    true  = c5
    false = (c6 + (c1 - (c5 + c6)))
- MCDCBranch { true: Expression(0, Sub), false: Zero, condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 32)
    true  = (c0 - (c1 + Zero))
    false = Zero
- MCDCBranch { true: Counter(3), false: Expression(10, Add), condition_id: 4, true_next_id: 0, false_next_id: 0 } at (prev + 0, 34) to (start + 0, 41)
    true  = c3
    false = (((c0 - (c1 + Zero)) - (c3 + Zero)) + Zero)
- Code(Expression(18, Add)) at (prev + 0, 46) to (start + 0, 74)
    = (c5 + c3)
- Code(Expression(19, Sub)) at (prev + 1, 25) to (start + 0, 36)
    = ((c0 - (c1 + Zero)) - (c3 + Zero))
- Code(Expression(16, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c6 + (c5 + c3)) + ((c0 - (c1 + Zero)) - (c3 + Zero)))

Function name: match_misc::partial_matched_decision
Raw bytes (192): 0x[01, 01, 22, 01, 17, 1b, 15, 1f, 11, 23, 0d, 05, 09, 1b, 15, 1f, 11, 23, 0d, 05, 09, 2b, 15, 2f, 11, 09, 0d, 05, 02, 3a, 25, 15, 21, 43, 15, 47, 11, 6b, 0d, 02, 05, 19, 09, 57, 15, 67, 11, 6b, 09, 02, 05, 67, 15, 6b, 09, 02, 05, 11, 0d, 77, 87, 01, 7b, 83, 01, 7f, 1d, 19, 09, 11, 0d, 05, 02, 10, 01, 3c, 01, 03, 0e, 28, 09, 02, 04, 09, 00, 14, 30, 02, 17, 01, 00, 02, 00, 09, 00, 0d, 30, 05, 27, 02, 00, 00, 00, 10, 00, 14, 87, 01, 00, 18, 00, 29, 21, 01, 09, 00, 14, 28, 06, 02, 00, 09, 00, 1b, 30, 19, 37, 02, 00, 00, 00, 09, 00, 14, 30, 09, 3f, 01, 00, 02, 00, 17, 00, 1b, 7f, 00, 1f, 00, 31, 28, 03, 02, 01, 09, 00, 14, 30, 0d, 53, 01, 00, 02, 00, 09, 00, 0d, 30, 11, 63, 02, 00, 00, 00, 10, 00, 14, 83, 01, 00, 18, 00, 25, 1d, 01, 0e, 00, 10, 73, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 34
- expression 0 operands: lhs = Counter(0), rhs = Expression(5, Add)
- expression 1 operands: lhs = Expression(6, Add), rhs = Counter(5)
- expression 2 operands: lhs = Expression(7, Add), rhs = Counter(4)
- expression 3 operands: lhs = Expression(8, Add), rhs = Counter(3)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(5)
- expression 6 operands: lhs = Expression(7, Add), rhs = Counter(4)
- expression 7 operands: lhs = Expression(8, Add), rhs = Counter(3)
- expression 8 operands: lhs = Counter(1), rhs = Counter(2)
- expression 9 operands: lhs = Expression(10, Add), rhs = Counter(5)
- expression 10 operands: lhs = Expression(11, Add), rhs = Counter(4)
- expression 11 operands: lhs = Counter(2), rhs = Counter(3)
- expression 12 operands: lhs = Counter(1), rhs = Expression(0, Sub)
- expression 13 operands: lhs = Expression(14, Sub), rhs = Counter(9)
- expression 14 operands: lhs = Counter(5), rhs = Counter(8)
- expression 15 operands: lhs = Expression(16, Add), rhs = Counter(5)
- expression 16 operands: lhs = Expression(17, Add), rhs = Counter(4)
- expression 17 operands: lhs = Expression(26, Add), rhs = Counter(3)
- expression 18 operands: lhs = Expression(0, Sub), rhs = Counter(1)
- expression 19 operands: lhs = Counter(6), rhs = Counter(2)
- expression 20 operands: lhs = Expression(21, Add), rhs = Counter(5)
- expression 21 operands: lhs = Expression(25, Add), rhs = Counter(4)
- expression 22 operands: lhs = Expression(26, Add), rhs = Counter(2)
- expression 23 operands: lhs = Expression(0, Sub), rhs = Counter(1)
- expression 24 operands: lhs = Expression(25, Add), rhs = Counter(5)
- expression 25 operands: lhs = Expression(26, Add), rhs = Counter(2)
- expression 26 operands: lhs = Expression(0, Sub), rhs = Counter(1)
- expression 27 operands: lhs = Counter(4), rhs = Counter(3)
- expression 28 operands: lhs = Expression(29, Add), rhs = Expression(33, Add)
- expression 29 operands: lhs = Expression(30, Add), rhs = Expression(32, Add)
- expression 30 operands: lhs = Expression(31, Add), rhs = Counter(7)
- expression 31 operands: lhs = Counter(6), rhs = Counter(2)
- expression 32 operands: lhs = Counter(4), rhs = Counter(3)
- expression 33 operands: lhs = Counter(1), rhs = Expression(0, Sub)
Number of file 0 mappings: 16
- Code(Counter(0)) at (prev + 60, 1) to (start + 3, 14)
- MCDCDecision { bitmap_idx: 9, conditions_num: 2 } at (prev + 4, 9) to (start + 0, 20)
- MCDCBranch { true: Expression(0, Sub), false: Expression(5, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 13)
    true  = (c0 - ((((c1 + c2) + c3) + c4) + c5))
    false = ((((c1 + c2) + c3) + c4) + c5)
- MCDCBranch { true: Counter(1), false: Expression(9, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 20)
    true  = c1
    false = (((c2 + c3) + c4) + c5)
- Code(Expression(33, Add)) at (prev + 0, 24) to (start + 0, 41)
    = (c1 + (c0 - ((((c1 + c2) + c3) + c4) + c5)))
- Code(Counter(8)) at (prev + 1, 9) to (start + 0, 20)
- MCDCDecision { bitmap_idx: 6, conditions_num: 2 } at (prev + 0, 9) to (start + 0, 27)
- MCDCBranch { true: Counter(6), false: Expression(13, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 20)
    true  = c6
    false = ((c5 - c8) + c9)
- MCDCBranch { true: Counter(2), false: Expression(15, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 23) to (start + 0, 27)
    true  = c2
    false = (((((c0 - ((((c1 + c2) + c3) + c4) + c5)) + c1) + c3) + c4) + c5)
- Code(Expression(31, Add)) at (prev + 0, 31) to (start + 0, 49)
    = (c6 + c2)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 20)
- MCDCBranch { true: Counter(3), false: Expression(20, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 13)
    true  = c3
    false = (((((c0 - ((((c1 + c2) + c3) + c4) + c5)) + c1) + c2) + c4) + c5)
- MCDCBranch { true: Counter(4), false: Expression(24, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 20)
    true  = c4
    false = ((((c0 - ((((c1 + c2) + c3) + c4) + c5)) + c1) + c2) + c5)
- Code(Expression(32, Add)) at (prev + 0, 24) to (start + 0, 37)
    = (c4 + c3)
- Code(Counter(7)) at (prev + 1, 14) to (start + 0, 16)
- Code(Expression(28, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((((c6 + c2) + c7) + (c4 + c3)) + (c1 + (c0 - ((((c1 + c2) + c3) + c4) + c5))))

Function name: match_misc::partial_matched_with_several_blocks
Raw bytes (95): 0x[01, 01, 0f, 05, 09, 2e, 09, 01, 05, 26, 1d, 2b, 0d, 2e, 09, 01, 05, 23, 19, 26, 1d, 2b, 0d, 2e, 09, 01, 05, 37, 19, 3b, 15, 02, 11, 0b, 01, 48, 01, 01, 0e, 05, 02, 09, 00, 14, 20, 02, 2b, 00, 09, 00, 14, 02, 00, 18, 00, 22, 0d, 01, 09, 00, 14, 20, 11, 23, 00, 09, 00, 14, 11, 00, 18, 00, 28, 20, 19, 1e, 01, 09, 00, 0d, 19, 00, 11, 00, 22, 15, 01, 0e, 00, 1a, 33, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 15
- expression 0 operands: lhs = Counter(1), rhs = Counter(2)
- expression 1 operands: lhs = Expression(11, Sub), rhs = Counter(2)
- expression 2 operands: lhs = Counter(0), rhs = Counter(1)
- expression 3 operands: lhs = Expression(9, Sub), rhs = Counter(7)
- expression 4 operands: lhs = Expression(10, Add), rhs = Counter(3)
- expression 5 operands: lhs = Expression(11, Sub), rhs = Counter(2)
- expression 6 operands: lhs = Counter(0), rhs = Counter(1)
- expression 7 operands: lhs = Expression(8, Add), rhs = Counter(6)
- expression 8 operands: lhs = Expression(9, Sub), rhs = Counter(7)
- expression 9 operands: lhs = Expression(10, Add), rhs = Counter(3)
- expression 10 operands: lhs = Expression(11, Sub), rhs = Counter(2)
- expression 11 operands: lhs = Counter(0), rhs = Counter(1)
- expression 12 operands: lhs = Expression(13, Add), rhs = Counter(6)
- expression 13 operands: lhs = Expression(14, Add), rhs = Counter(5)
- expression 14 operands: lhs = Expression(0, Sub), rhs = Counter(4)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 72, 1) to (start + 1, 14)
- Code(Counter(1)) at (prev + 2, 9) to (start + 0, 20)
- Branch { true: Expression(0, Sub), false: Expression(10, Add) } at (prev + 0, 9) to (start + 0, 20)
    true  = (c1 - c2)
    false = ((c0 - c1) + c2)
- Code(Expression(0, Sub)) at (prev + 0, 24) to (start + 0, 34)
    = (c1 - c2)
- Code(Counter(3)) at (prev + 1, 9) to (start + 0, 20)
- Branch { true: Counter(4), false: Expression(8, Add) } at (prev + 0, 9) to (start + 0, 20)
    true  = c4
    false = ((((c0 - c1) + c2) - c3) + c7)
- Code(Counter(4)) at (prev + 0, 24) to (start + 0, 40)
- Branch { true: Counter(6), false: Expression(7, Sub) } at (prev + 1, 9) to (start + 0, 13)
    true  = c6
    false = (((((c0 - c1) + c2) - c3) + c7) - c6)
- Code(Counter(6)) at (prev + 0, 17) to (start + 0, 34)
- Code(Counter(5)) at (prev + 1, 14) to (start + 0, 26)
- Code(Expression(12, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((((c1 - c2) + c4) + c5) + c6)

Function name: match_misc::skipped_matching_decision
Raw bytes (59): 0x[01, 01, 03, 01, 05, 0b, 0d, 05, 09, 09, 01, 2b, 01, 01, 0e, 05, 02, 09, 00, 0a, 01, 00, 0e, 00, 0f, 20, 05, 02, 00, 0e, 00, 14, 05, 00, 13, 00, 2b, 20, 0d, 11, 01, 09, 00, 0b, 0d, 00, 0f, 00, 18, 09, 01, 0e, 00, 1a, 07, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 3
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(3)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 9
- Code(Counter(0)) at (prev + 43, 1) to (start + 1, 14)
- Code(Counter(1)) at (prev + 2, 9) to (start + 0, 10)
- Code(Counter(0)) at (prev + 0, 14) to (start + 0, 15)
- Branch { true: Counter(1), false: Expression(0, Sub) } at (prev + 0, 14) to (start + 0, 20)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 19) to (start + 0, 43)
- Branch { true: Counter(3), false: Counter(4) } at (prev + 1, 9) to (start + 0, 11)
    true  = c3
    false = c4
- Code(Counter(3)) at (prev + 0, 15) to (start + 0, 24)
- Code(Counter(2)) at (prev + 1, 14) to (start + 0, 26)
- Code(Expression(1, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c1 + c2) + c3)

Function name: match_misc::uncoverable_condition
Raw bytes (80): 0x[01, 01, 07, 00, 0d, 01, 0f, 05, 00, 05, 00, 11, 05, 1b, 15, 11, 05, 0a, 01, 5f, 01, 00, 2b, 03, 01, 0b, 00, 0e, 28, 03, 02, 01, 09, 00, 1f, 30, 06, 0f, 01, 02, 00, 00, 0a, 00, 13, 15, 00, 11, 00, 3c, 30, 15, 0d, 02, 00, 00, 00, 15, 00, 1e, 05, 01, 11, 00, 12, 11, 00, 25, 00, 26, 1b, 00, 2c, 00, 3f, 17, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 7
- expression 0 operands: lhs = Zero, rhs = Counter(3)
- expression 1 operands: lhs = Counter(0), rhs = Expression(3, Add)
- expression 2 operands: lhs = Counter(1), rhs = Zero
- expression 3 operands: lhs = Counter(1), rhs = Zero
- expression 4 operands: lhs = Counter(4), rhs = Counter(1)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(5)
- expression 6 operands: lhs = Counter(4), rhs = Counter(1)
Number of file 0 mappings: 10
- Code(Counter(0)) at (prev + 95, 1) to (start + 0, 43)
- Code(Expression(0, Add)) at (prev + 1, 11) to (start + 0, 14)
    = (Zero + c3)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Expression(1, Sub), false: Expression(3, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = (c0 - (c1 + Zero))
    false = (c1 + Zero)
- Code(Counter(5)) at (prev + 0, 17) to (start + 0, 60)
- MCDCBranch { true: Counter(5), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c5
    false = c3
- Code(Counter(1)) at (prev + 1, 17) to (start + 0, 18)
- Code(Counter(4)) at (prev + 0, 37) to (start + 0, 38)
- Code(Expression(6, Add)) at (prev + 0, 44) to (start + 0, 63)
    = (c4 + c1)
- Code(Expression(5, Add)) at (prev + 2, 1) to (start + 0, 2)
    = ((c4 + c1) + c5)

