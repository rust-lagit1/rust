Function name: match_pattern::joint_or_patterns
Raw bytes (342): 0x[01, 01, 29, 01, 0b, 05, 09, 05, 09, 02, 0d, 1d, 19, 1d, 21, 25, 15, 25, 15, 11, 15, 35, 29, 2d, 31, 35, a3, 01, 39, 3d, 45, 9e, 01, 35, a3, 01, 39, 3d, 47, 3d, 4b, 39, 41, 62, 66, 6b, 2d, 31, 45, 41, 41, 39, 62, 3d, 66, 6b, 2d, 31, 45, 41, 97, 01, 45, 9b, 01, 41, 39, 9e, 01, 35, a3, 01, 39, 3d, 49, 4d, 8b, 01, 93, 01, 8f, 01, 51, 49, 4d, 97, 01, 45, 9b, 01, 41, 39, 9e, 01, 35, a3, 01, 39, 3d, 20, 01, 2e, 01, 00, 27, 25, 01, 0b, 00, 0e, 28, 0b, 05, 01, 09, 00, 3d, 30, 02, 0b, 01, 02, 03, 00, 0a, 00, 19, 30, 0e, 0d, 02, 04, 00, 00, 11, 00, 18, 30, 05, 09, 03, 04, 00, 00, 1c, 00, 25, 30, 21, 13, 04, 00, 05, 00, 27, 00, 30, 30, 1d, 19, 05, 00, 00, 00, 33, 00, 3c, 17, 00, 41, 00, 63, 28, 03, 02, 01, 09, 00, 1f, 30, 25, 11, 01, 02, 00, 00, 0a, 00, 13, 30, 1e, 15, 02, 00, 00, 00, 15, 00, 1e, 1e, 00, 23, 00, 39, 23, 01, 0e, 00, 23, 55, 04, 0b, 00, 0e, 28, 16, 05, 01, 09, 00, 3d, 30, 2d, 27, 01, 02, 03, 00, 0a, 00, 19, 30, 66, 31, 02, 04, 00, 00, 11, 00, 18, 45, 00, 16, 00, 17, 30, 35, 29, 03, 04, 00, 00, 1c, 00, 25, 9e, 01, 00, 23, 00, 24, 30, 37, 43, 04, 00, 05, 00, 27, 00, 30, 45, 00, 2e, 00, 2f, 30, 5b, 5f, 05, 00, 00, 00, 33, 00, 3c, 41, 00, 3a, 00, 3b, 93, 01, 01, 0d, 00, 45, 28, 0e, 02, 02, 09, 00, 1f, 30, 55, 49, 01, 02, 00, 00, 0a, 00, 13, 30, 51, 4d, 02, 00, 00, 00, 15, 00, 1e, 51, 00, 23, 00, 39, 8f, 01, 01, 0e, 00, 23, 87, 01, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 41
- expression 0 operands: lhs = Counter(0), rhs = Expression(2, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 4 operands: lhs = Counter(7), rhs = Counter(6)
- expression 5 operands: lhs = Counter(7), rhs = Counter(8)
- expression 6 operands: lhs = Counter(9), rhs = Counter(5)
- expression 7 operands: lhs = Counter(9), rhs = Counter(5)
- expression 8 operands: lhs = Counter(4), rhs = Counter(5)
- expression 9 operands: lhs = Counter(13), rhs = Counter(10)
- expression 10 operands: lhs = Counter(11), rhs = Counter(12)
- expression 11 operands: lhs = Counter(13), rhs = Expression(40, Add)
- expression 12 operands: lhs = Counter(14), rhs = Counter(15)
- expression 13 operands: lhs = Counter(17), rhs = Expression(39, Sub)
- expression 14 operands: lhs = Counter(13), rhs = Expression(40, Add)
- expression 15 operands: lhs = Counter(14), rhs = Counter(15)
- expression 16 operands: lhs = Expression(17, Add), rhs = Counter(15)
- expression 17 operands: lhs = Expression(18, Add), rhs = Counter(14)
- expression 18 operands: lhs = Counter(16), rhs = Expression(24, Sub)
- expression 19 operands: lhs = Expression(25, Sub), rhs = Expression(26, Add)
- expression 20 operands: lhs = Counter(11), rhs = Counter(12)
- expression 21 operands: lhs = Counter(17), rhs = Counter(16)
- expression 22 operands: lhs = Counter(16), rhs = Counter(14)
- expression 23 operands: lhs = Expression(24, Sub), rhs = Counter(15)
- expression 24 operands: lhs = Expression(25, Sub), rhs = Expression(26, Add)
- expression 25 operands: lhs = Counter(11), rhs = Counter(12)
- expression 26 operands: lhs = Counter(17), rhs = Counter(16)
- expression 27 operands: lhs = Expression(37, Add), rhs = Counter(17)
- expression 28 operands: lhs = Expression(38, Add), rhs = Counter(16)
- expression 29 operands: lhs = Counter(14), rhs = Expression(39, Sub)
- expression 30 operands: lhs = Counter(13), rhs = Expression(40, Add)
- expression 31 operands: lhs = Counter(14), rhs = Counter(15)
- expression 32 operands: lhs = Counter(18), rhs = Counter(19)
- expression 33 operands: lhs = Expression(34, Add), rhs = Expression(36, Add)
- expression 34 operands: lhs = Expression(35, Add), rhs = Counter(20)
- expression 35 operands: lhs = Counter(18), rhs = Counter(19)
- expression 36 operands: lhs = Expression(37, Add), rhs = Counter(17)
- expression 37 operands: lhs = Expression(38, Add), rhs = Counter(16)
- expression 38 operands: lhs = Counter(14), rhs = Expression(39, Sub)
- expression 39 operands: lhs = Counter(13), rhs = Expression(40, Add)
- expression 40 operands: lhs = Counter(14), rhs = Counter(15)
Number of file 0 mappings: 32
- Code(Counter(0)) at (prev + 46, 1) to (start + 0, 39)
- Code(Counter(9)) at (prev + 1, 11) to (start + 0, 14)
- MCDCDecision { bitmap_idx: 11, conditions_num: 5 } at (prev + 1, 9) to (start + 0, 61)
- MCDCBranch { true: Expression(0, Sub), false: Expression(2, Add), condition_id: 1, true_next_id: 2, false_next_id: 3 } at (prev + 0, 10) to (start + 0, 25)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Expression(3, Sub), false: Counter(3), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = ((c0 - (c1 + c2)) - c3)
    false = c3
- MCDCBranch { true: Counter(1), false: Counter(2), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c1
    false = c2
- MCDCBranch { true: Counter(8), false: Expression(4, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 39) to (start + 0, 48)
    true  = c8
    false = (c7 + c6)
- MCDCBranch { true: Counter(7), false: Counter(6), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 51) to (start + 0, 60)
    true  = c7
    false = c6
- Code(Expression(5, Add)) at (prev + 0, 65) to (start + 0, 99)
    = (c7 + c8)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(9), false: Counter(4), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c9
    false = c4
- MCDCBranch { true: Expression(7, Sub), false: Counter(5), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = (c9 - c5)
    false = c5
- Code(Expression(7, Sub)) at (prev + 0, 35) to (start + 0, 57)
    = (c9 - c5)
- Code(Expression(8, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c4 + c5)
- Code(Counter(21)) at (prev + 4, 11) to (start + 0, 14)
- MCDCDecision { bitmap_idx: 22, conditions_num: 5 } at (prev + 1, 9) to (start + 0, 61)
- MCDCBranch { true: Counter(11), false: Expression(9, Add), condition_id: 1, true_next_id: 2, false_next_id: 3 } at (prev + 0, 10) to (start + 0, 25)
    true  = c11
    false = (c13 + c10)
- MCDCBranch { true: Expression(25, Sub), false: Counter(12), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = (c11 - c12)
    false = c12
- Code(Counter(17)) at (prev + 0, 22) to (start + 0, 23)
- MCDCBranch { true: Counter(13), false: Counter(10), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c13
    false = c10
- Code(Expression(39, Sub)) at (prev + 0, 35) to (start + 0, 36)
    = (c13 - (c14 + c15))
- MCDCBranch { true: Expression(13, Add), false: Expression(16, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 39) to (start + 0, 48)
    true  = (c17 + (c13 - (c14 + c15)))
    false = (((c16 + ((c11 - c12) - (c17 + c16))) + c14) + c15)
- Code(Counter(17)) at (prev + 0, 46) to (start + 0, 47)
- MCDCBranch { true: Expression(22, Add), false: Expression(23, Add), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 51) to (start + 0, 60)
    true  = (c16 + c14)
    false = (((c11 - c12) - (c17 + c16)) + c15)
- Code(Counter(16)) at (prev + 0, 58) to (start + 0, 59)
- Code(Expression(36, Add)) at (prev + 1, 13) to (start + 0, 69)
    = (((c14 + (c13 - (c14 + c15))) + c16) + c17)
- MCDCDecision { bitmap_idx: 14, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(21), false: Counter(18), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c21
    false = c18
- MCDCBranch { true: Counter(20), false: Counter(19), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c20
    false = c19
- Code(Counter(20)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(35, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c18 + c19)
- Code(Expression(33, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c18 + c19) + c20) + (((c14 + (c13 - (c14 + c15))) + c16) + c17))

Function name: match_pattern::joint_pattern_with_or
Raw bytes (150): 0x[01, 01, 15, 2a, 13, 01, 2f, 05, 09, 1d, 11, 1d, 11, 01, 2f, 05, 09, 05, 09, 1d, 21, 2a, 09, 01, 2f, 05, 09, 4b, 15, 4f, 11, 09, 0d, 43, 53, 47, 19, 4b, 15, 4f, 11, 09, 0d, 1d, 21, 0e, 01, 26, 01, 00, 2b, 02, 01, 0b, 00, 0e, 28, 08, 04, 01, 09, 00, 31, 30, 02, 13, 02, 03, 04, 00, 0a, 00, 19, 30, 21, 15, 03, 00, 00, 00, 11, 00, 18, 30, 1d, 11, 04, 00, 00, 00, 1c, 00, 25, 30, 2a, 2f, 01, 02, 00, 00, 27, 00, 30, 53, 00, 35, 00, 53, 28, 03, 02, 01, 09, 00, 1f, 30, 19, 0d, 02, 00, 00, 00, 0a, 00, 13, 30, 05, 27, 01, 02, 00, 00, 15, 00, 1e, 19, 00, 23, 00, 39, 47, 01, 0e, 00, 23, 3f, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 21
- expression 0 operands: lhs = Expression(10, Sub), rhs = Expression(4, Add)
- expression 1 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(7), rhs = Counter(4)
- expression 4 operands: lhs = Counter(7), rhs = Counter(4)
- expression 5 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 6 operands: lhs = Counter(1), rhs = Counter(2)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
- expression 8 operands: lhs = Counter(7), rhs = Counter(8)
- expression 9 operands: lhs = Expression(10, Sub), rhs = Counter(2)
- expression 10 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 11 operands: lhs = Counter(1), rhs = Counter(2)
- expression 12 operands: lhs = Expression(18, Add), rhs = Counter(5)
- expression 13 operands: lhs = Expression(19, Add), rhs = Counter(4)
- expression 14 operands: lhs = Counter(2), rhs = Counter(3)
- expression 15 operands: lhs = Expression(16, Add), rhs = Expression(20, Add)
- expression 16 operands: lhs = Expression(17, Add), rhs = Counter(6)
- expression 17 operands: lhs = Expression(18, Add), rhs = Counter(5)
- expression 18 operands: lhs = Expression(19, Add), rhs = Counter(4)
- expression 19 operands: lhs = Counter(2), rhs = Counter(3)
- expression 20 operands: lhs = Counter(7), rhs = Counter(8)
Number of file 0 mappings: 14
- Code(Counter(0)) at (prev + 38, 1) to (start + 0, 43)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - (c7 + c4))
- MCDCDecision { bitmap_idx: 8, conditions_num: 4 } at (prev + 1, 9) to (start + 0, 49)
- MCDCBranch { true: Expression(0, Sub), false: Expression(4, Add), condition_id: 2, true_next_id: 3, false_next_id: 4 } at (prev + 0, 10) to (start + 0, 25)
    true  = ((c0 - (c1 + c2)) - (c7 + c4))
    false = (c7 + c4)
- MCDCBranch { true: Counter(8), false: Counter(5), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = c8
    false = c5
- MCDCBranch { true: Counter(7), false: Counter(4), condition_id: 4, true_next_id: 0, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c7
    false = c4
- MCDCBranch { true: Expression(10, Sub), false: Expression(11, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 39) to (start + 0, 48)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- Code(Expression(20, Add)) at (prev + 0, 53) to (start + 0, 83)
    = (c7 + c8)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(6), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c6
    false = c3
- MCDCBranch { true: Counter(1), false: Expression(9, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(17, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(15, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + (c7 + c8))

Function name: match_pattern::partial_matched
Raw bytes (89): 0x[01, 01, 08, 01, 05, 02, 09, 05, 09, 12, 0d, 02, 09, 1b, 11, 1f, 0d, 05, 09, 0b, 01, 3f, 01, 01, 0e, 28, 03, 02, 02, 09, 00, 23, 30, 05, 02, 01, 00, 02, 00, 09, 00, 13, 05, 00, 0a, 00, 12, 30, 09, 12, 02, 00, 00, 00, 16, 00, 23, 09, 00, 1a, 00, 22, 1f, 00, 27, 00, 4f, 20, 0d, 0e, 01, 09, 00, 1d, 0d, 00, 10, 00, 49, 11, 01, 0e, 00, 23, 17, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 8
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(4, Sub), rhs = Counter(3)
- expression 4 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(4)
- expression 6 operands: lhs = Expression(7, Add), rhs = Counter(3)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 63, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 35)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 19)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 10) to (start + 0, 18)
- MCDCBranch { true: Counter(2), false: Expression(4, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 22) to (start + 0, 35)
    true  = c2
    false = ((c0 - c1) - c2)
- Code(Counter(2)) at (prev + 0, 26) to (start + 0, 34)
- Code(Expression(7, Add)) at (prev + 0, 39) to (start + 0, 79)
    = (c1 + c2)
- Branch { true: Counter(3), false: Expression(3, Sub) } at (prev + 1, 9) to (start + 0, 29)
    true  = c3
    false = (((c0 - c1) - c2) - c3)
- Code(Counter(3)) at (prev + 0, 16) to (start + 0, 73)
- Code(Counter(4)) at (prev + 1, 14) to (start + 0, 35)
- Code(Expression(5, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c1 + c2) + c3) + c4)

Function name: match_pattern::simple_joint_pattern
Raw bytes (132): 0x[01, 01, 11, 1e, 11, 01, 23, 05, 09, 01, 23, 05, 09, 05, 09, 1e, 09, 01, 23, 05, 09, 3f, 15, 43, 11, 09, 0d, 37, 1d, 3b, 19, 3f, 15, 43, 11, 09, 0d, 0d, 01, 1e, 01, 00, 2a, 02, 01, 0b, 00, 0e, 28, 07, 03, 01, 09, 00, 25, 30, 1e, 23, 01, 02, 00, 00, 0a, 00, 19, 30, 1d, 15, 03, 00, 00, 00, 11, 00, 18, 30, 02, 11, 02, 03, 00, 00, 1b, 00, 24, 1d, 00, 29, 00, 43, 28, 03, 02, 01, 09, 00, 1f, 30, 05, 1b, 01, 02, 00, 00, 0a, 00, 13, 30, 19, 0d, 02, 00, 00, 00, 15, 00, 1e, 19, 00, 23, 00, 39, 3b, 01, 0e, 00, 23, 33, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 17
- expression 0 operands: lhs = Expression(7, Sub), rhs = Counter(4)
- expression 1 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
- expression 6 operands: lhs = Expression(7, Sub), rhs = Counter(2)
- expression 7 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 8 operands: lhs = Counter(1), rhs = Counter(2)
- expression 9 operands: lhs = Expression(15, Add), rhs = Counter(5)
- expression 10 operands: lhs = Expression(16, Add), rhs = Counter(4)
- expression 11 operands: lhs = Counter(2), rhs = Counter(3)
- expression 12 operands: lhs = Expression(13, Add), rhs = Counter(7)
- expression 13 operands: lhs = Expression(14, Add), rhs = Counter(6)
- expression 14 operands: lhs = Expression(15, Add), rhs = Counter(5)
- expression 15 operands: lhs = Expression(16, Add), rhs = Counter(4)
- expression 16 operands: lhs = Counter(2), rhs = Counter(3)
Number of file 0 mappings: 13
- Code(Counter(0)) at (prev + 30, 1) to (start + 0, 42)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - c4)
- MCDCDecision { bitmap_idx: 7, conditions_num: 3 } at (prev + 1, 9) to (start + 0, 37)
- MCDCBranch { true: Expression(7, Sub), false: Expression(8, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 25)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(7), false: Counter(5), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = c7
    false = c5
- MCDCBranch { true: Expression(0, Sub), false: Counter(4), condition_id: 2, true_next_id: 3, false_next_id: 0 } at (prev + 0, 27) to (start + 0, 36)
    true  = ((c0 - (c1 + c2)) - c4)
    false = c4
- Code(Counter(7)) at (prev + 0, 41) to (start + 0, 67)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(1), false: Expression(6, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- MCDCBranch { true: Counter(6), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c6
    false = c3
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(14, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(12, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + c7)

Function name: match_pattern::simple_or_pattern
Raw bytes (63): 0x[01, 01, 06, 01, 0b, 05, 09, 05, 09, 05, 02, 0d, 17, 05, 02, 07, 01, 17, 01, 01, 0e, 28, 03, 02, 02, 09, 00, 1e, 30, 02, 0b, 01, 00, 02, 00, 09, 00, 12, 30, 05, 09, 02, 00, 00, 00, 15, 00, 1e, 17, 00, 22, 00, 37, 0d, 01, 0e, 00, 1e, 13, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Counter(0), rhs = Expression(2, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(1), rhs = Expression(0, Sub)
- expression 4 operands: lhs = Counter(3), rhs = Expression(5, Add)
- expression 5 operands: lhs = Counter(1), rhs = Expression(0, Sub)
Number of file 0 mappings: 7
- Code(Counter(0)) at (prev + 23, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 30)
- MCDCBranch { true: Expression(0, Sub), false: Expression(2, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 18)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(1), false: Counter(2), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c1
    false = c2
- Code(Expression(5, Add)) at (prev + 0, 34) to (start + 0, 55)
    = (c1 + (c0 - (c1 + c2)))
- Code(Counter(3)) at (prev + 1, 14) to (start + 0, 30)
- Code(Expression(4, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (c3 + (c1 + (c0 - (c1 + c2))))

Function name: match_pattern::single_nested_pattern
Raw bytes (136): 0x[01, 01, 12, 01, 23, 27, 00, 05, 09, 27, 00, 05, 09, 15, 2e, 02, 33, 15, 11, 27, 00, 05, 09, 11, 2e, 02, 33, 15, 11, 3b, 00, 02, 09, 43, 15, 47, 11, 09, 05, 0e, 01, 0e, 01, 00, 24, 02, 01, 0b, 00, 0e, 28, 06, 02, 01, 09, 00, 18, 30, 02, 23, 01, 02, 00, 00, 09, 00, 18, 30, 11, 17, 02, 00, 00, 00, 10, 00, 17, 11, 00, 1c, 00, 32, 28, 03, 02, 01, 09, 00, 15, 30, 02, 23, 01, 02, 00, 00, 09, 00, 15, 30, 15, 2b, 02, 00, 00, 00, 10, 00, 14, 15, 00, 19, 00, 2f, 20, 05, 37, 01, 09, 00, 12, 05, 00, 16, 00, 26, 09, 01, 16, 00, 26, 3f, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 18
- expression 0 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 1 operands: lhs = Expression(9, Add), rhs = Zero
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(9, Add), rhs = Zero
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(5), rhs = Expression(11, Sub)
- expression 6 operands: lhs = Expression(0, Sub), rhs = Expression(12, Add)
- expression 7 operands: lhs = Counter(5), rhs = Counter(4)
- expression 8 operands: lhs = Expression(9, Add), rhs = Zero
- expression 9 operands: lhs = Counter(1), rhs = Counter(2)
- expression 10 operands: lhs = Counter(4), rhs = Expression(11, Sub)
- expression 11 operands: lhs = Expression(0, Sub), rhs = Expression(12, Add)
- expression 12 operands: lhs = Counter(5), rhs = Counter(4)
- expression 13 operands: lhs = Expression(14, Add), rhs = Zero
- expression 14 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 15 operands: lhs = Expression(16, Add), rhs = Counter(5)
- expression 16 operands: lhs = Expression(17, Add), rhs = Counter(4)
- expression 17 operands: lhs = Counter(2), rhs = Counter(1)
Number of file 0 mappings: 14
- Code(Counter(0)) at (prev + 14, 1) to (start + 0, 36)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = (c0 - ((c1 + c2) + Zero))
- MCDCDecision { bitmap_idx: 6, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 24)
- MCDCBranch { true: Expression(0, Sub), false: Expression(8, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 24)
    true  = (c0 - ((c1 + c2) + Zero))
    false = ((c1 + c2) + Zero)
- MCDCBranch { true: Counter(4), false: Expression(5, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 23)
    true  = c4
    false = (c5 + ((c0 - ((c1 + c2) + Zero)) - (c5 + c4)))
- Code(Counter(4)) at (prev + 0, 28) to (start + 0, 50)
- MCDCDecision { bitmap_idx: 3, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 21)
- MCDCBranch { true: Expression(0, Sub), false: Expression(8, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 21)
    true  = (c0 - ((c1 + c2) + Zero))
    false = ((c1 + c2) + Zero)
- MCDCBranch { true: Counter(5), false: Expression(10, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 20)
    true  = c5
    false = (c4 + ((c0 - ((c1 + c2) + Zero)) - (c5 + c4)))
- Code(Counter(5)) at (prev + 0, 25) to (start + 0, 47)
- Branch { true: Counter(1), false: Expression(13, Add) } at (prev + 1, 9) to (start + 0, 18)
    true  = c1
    false = (((c0 - ((c1 + c2) + Zero)) + c2) + Zero)
- Code(Counter(1)) at (prev + 0, 22) to (start + 0, 38)
- Code(Counter(2)) at (prev + 1, 22) to (start + 0, 38)
- Code(Expression(15, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c2 + c1) + c4) + c5)

